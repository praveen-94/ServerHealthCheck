<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Server Health Monitoring Dashboard"
        Height="800" Width="1000"
        WindowStartupLocation="CenterScreen"
        Background="#FF1E1E1E"
        Foreground="White"
        FontFamily="Segoe UI"
        FontSize="14">

    <!-- Window Resources -->
    <Window.Resources>
        <!-- Gradient Brush for Buttons -->
        <LinearGradientBrush x:Key="ButtonGradient" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FF1E90FF" Offset="0"/>
            <GradientStop Color="#FF007ACC" Offset="1"/>
        </LinearGradientBrush>

        <!-- Rounded Button Style -->
        <Style x:Key="RoundedButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource ButtonGradient}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Rounded TextBox Style -->
        <Style x:Key="RoundedTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#FF3E3E42"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern Progress Bar Style -->
        <Style x:Key="ModernProgressBar" TargetType="ProgressBar">
            <Setter Property="Background" Value="#FF3E3E42"/>
            <Setter Property="Foreground" Value="#FF4CAF50"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <Grid x:Name="PART_Track">
                                <Rectangle x:Name="PART_Indicator" Fill="{TemplateBinding Foreground}" RadiusX="10" RadiusY="10"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid Column Header Style -->
        <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#FF2D2D30"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10,10,0,0">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Cell Style for DataGrid Rows -->
        <Style x:Key="LeftAlignedCellStyle" TargetType="DataGridCell">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10,10,0,0">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Rounded DataGrid Style -->
        <Style x:Key="RoundedDataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="#FF3E3E42"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="RowBackground" Value="#FF3E3E42"/>
            <Setter Property="AlternatingRowBackground" Value="#FF2D2D30"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStyle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGrid">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10" Padding="0">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="ScrollViewer">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <!-- Column Headers -->
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                            Grid.Column="1"
                                                                            Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>

                                            <!-- DataGrid Rows -->
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                    Grid.Row="1"
                                                                    Grid.Column="1"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}"/>

                                            <!-- Scroll Bars -->
                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                                       Grid.Row="1"
                                                       Grid.Column="2"
                                                       Orientation="Vertical"
                                                       Maximum="{TemplateBinding ScrollableHeight}"
                                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Row="2"
                                                       Grid.Column="1"
                                                       Orientation="Horizontal"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Red for High Usage -->
        <SolidColorBrush x:Key="HighUsageBackground" Color="Red"/>
        <SolidColorBrush x:Key="HighUsageForeground" Color="Black"/>

        <!-- Yellow for Warning -->
        <SolidColorBrush x:Key="WarningBackground" Color="Yellow"/>
        <SolidColorBrush x:Key="WarningForeground" Color="Black"/>

        <!-- Green for All Good -->
        <SolidColorBrush x:Key="AllGoodBackground" Color="Green"/>
        <SolidColorBrush x:Key="AllGoodForeground" Color="White"/>

        <!-- Gray for Offline -->
        <SolidColorBrush x:Key="OfflineBackground" Color="Gray"/>
        <SolidColorBrush x:Key="OfflineForeground" Color="White"/>

        <!-- DataGrid Row Style with Icons -->
        <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="{StaticResource OfflineBackground}"/> <!-- Default for offline -->
            <Setter Property="Foreground" Value="{StaticResource OfflineForeground}"/>
            <Setter Property="FontSize" Value="14"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding HardWare_Check}" Value="High">
                    <Setter Property="Background" Value="{StaticResource HighUsageBackground}"/> <!-- Red -->
                    <Setter Property="Foreground" Value="{StaticResource HighUsageForeground}"/> <!-- White -->
                </DataTrigger>
                <DataTrigger Binding="{Binding OS_Check}" Value="High">
                    <Setter Property="Background" Value="{StaticResource HighUsageBackground}"/> <!-- Red -->
                    <Setter Property="Foreground" Value="{StaticResource HighUsageForeground}"/> <!-- White -->
                </DataTrigger>
                <DataTrigger Binding="{Binding Users_Check}" Value="High">
                    <Setter Property="Background" Value="{StaticResource HighUsageBackground}"/> <!-- Red -->
                    <Setter Property="Foreground" Value="{StaticResource HighUsageForeground}"/> <!-- White -->
                </DataTrigger>
                <DataTrigger Binding="{Binding Service_Check}" Value="High">
                    <Setter Property="Background" Value="{StaticResource HighUsageBackground}"/> <!-- Red -->
                    <Setter Property="Foreground" Value="{StaticResource HighUsageForeground}"/> <!-- White -->
                </DataTrigger>
                <DataTrigger Binding="{Binding Application_Check}" Value="High">
                    <Setter Property="Background" Value="{StaticResource HighUsageBackground}"/> <!-- Red -->
                    <Setter Property="Foreground" Value="{StaticResource HighUsageForeground}"/> <!-- White -->
                </DataTrigger>
                <DataTrigger Binding="{Binding Update_Check}" Value="High">
                    <Setter Property="Background" Value="{StaticResource HighUsageBackground}"/> <!-- Red -->
                    <Setter Property="Foreground" Value="{StaticResource HighUsageForeground}"/> <!-- White -->
                </DataTrigger>
                <DataTrigger Binding="{Binding EventLog_Check}" Value="High">
                    <Setter Property="Background" Value="{StaticResource HighUsageBackground}"/> <!-- Red -->
                    <Setter Property="Foreground" Value="{StaticResource HighUsageForeground}"/> <!-- White -->
                </DataTrigger>
                <DataTrigger Binding="{Binding All_Good}" Value="Yes">
                    <Setter Property="Background" Value="{StaticResource AllGoodBackground}"/> <!-- Green -->
                    <Setter Property="Foreground" Value="{StaticResource AllGoodForeground}"/> <!-- White -->
                </DataTrigger>
                <DataTrigger Binding="{Binding All_Good}" Value="Check File">
                    <Setter Property="Background" Value="{StaticResource WarningBackground}"/> <!-- Yellow -->
                    <Setter Property="Foreground" Value="{StaticResource WarningForeground}"/> <!-- White -->
                </DataTrigger>
                <DataTrigger Binding="{Binding All_Good}" Value="No">
                    <Setter Property="Background" Value="{StaticResource HighUsageBackground}"/> <!-- Red -->
                    <Setter Property="Foreground" Value="{StaticResource HighUsageForeground}"/> <!-- White -->
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <!-- Main Grid -->
    <Grid>
        <!-- Background Gradient -->
        <Grid.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FF252526" Offset="0"/>
                <GradientStop Color="#FF1E1E1E" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>

        <!-- Server Input Box -->
        <TextBox Name="ServerInput" Width="600" Height="40" Margin="20,20,0,0"
                 HorizontalAlignment="Left" VerticalAlignment="Top"
                 Text="Enter server names (separated by commas) OR import a CSV file"
                 Foreground="#FFA0A0A0"
                 Style="{StaticResource RoundedTextBoxStyle}"/>

        <!-- Clear Button with Unicode Icon -->
        <Button Name="ClearButton" Width="130" Height="40"
                HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,20,160,0"
                Style="{StaticResource RoundedButtonStyle}"
                ToolTip="Clear the server input field">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="🗑" FontSize="16" Margin="0,0,5,0"/>
                <TextBlock Text="Clear"/>
            </StackPanel>
        </Button>

        <!-- Import Button with Unicode Icon -->
        <Button Name="ImportButton" Width="130" Height="40"
                HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,20,20,0"
                Style="{StaticResource RoundedButtonStyle}"
                ToolTip="Import server names from a CSV file">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="📂" FontSize="16" Margin="0,0,5,0"/>
                <TextBlock Text="Import"/>
            </StackPanel>
        </Button>

        <!-- Start/Refresh Button with Unicode Icon -->
        <Button Name="StartRefreshButton" Width="130" Height="40"
                HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20,80,0,0"
                Style="{StaticResource RoundedButtonStyle}"
                Background="#FF4CAF50"
                ToolTip="Start or refresh the server health check">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="▶" FontSize="16" Margin="0,0,5,0"/>
                <TextBlock Text="Start/Refresh"/>
            </StackPanel>
        </Button>

        <!-- Export Button with Unicode Icon -->
        <Button Name="ExportButton" Width="130" Height="40"
                HorizontalAlignment="Left" VerticalAlignment="Top" Margin="160,80,0,0"
                Style="{StaticResource RoundedButtonStyle}"
                Background="#FF2196F3"
                ToolTip="Export server health data to CSV and HTML">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="📄" FontSize="16" Margin="0,0,5,0"/>
                <TextBlock Text="Export"/>
            </StackPanel>
        </Button>

        <!-- Stop Button with Unicode Icon -->
        <Button Name="StopButton" Width="130" Height="40"
                HorizontalAlignment="Left" VerticalAlignment="Top" Margin="300,80,0,0"
                Style="{StaticResource RoundedButtonStyle}"
                Background="#FFF44336"
                ToolTip="Stop the health check and close the tool">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="⏹" FontSize="16" Margin="0,0,5,0"/>
                <TextBlock Text="Stop"/>
            </StackPanel>
        </Button>

        <!-- Modern Progress Bar -->
        <ProgressBar Name="ProgressBar" Width="600" Height="20" Margin="20,130,0,0"
                     HorizontalAlignment="Left" VerticalAlignment="Top"
                     Style="{StaticResource ModernProgressBar}"/>

        <!-- Server Data Grid with Unicode Icons -->
        <DataGrid Name="ServerGrid" Margin="20,160,20,40"
                  Style="{StaticResource RoundedDataGridStyle}"
                  RowStyle="{StaticResource DataGridRowStyle}"
                  AutoGenerateColumns="False" 
                  ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Server" Binding="{Binding Server}" Width="*" CellStyle="{StaticResource LeftAlignedCellStyle}"/>
                <DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="*" CellStyle="{StaticResource LeftAlignedCellStyle}"/>
                <DataGridTextColumn Header="Hardware" Binding="{Binding HardWare_Check}" Width="*" CellStyle="{StaticResource LeftAlignedCellStyle}"/>
                <DataGridTextColumn Header="OS" Binding="{Binding OS_Check}" Width="*" CellStyle="{StaticResource LeftAlignedCellStyle}"/>
                <DataGridTextColumn Header="Users" Binding="{Binding Users_Check}" Width="*" CellStyle="{StaticResource LeftAlignedCellStyle}"/>
                <DataGridTextColumn Header="Service" Binding="{Binding Service_Check}" Width="*" CellStyle="{StaticResource LeftAlignedCellStyle}"/>
                <DataGridTextColumn Header="Apps" Binding="{Binding Application_Check}" Width="*" CellStyle="{StaticResource LeftAlignedCellStyle}"/>
                <DataGridTextColumn Header="EventLog" Binding="{Binding EventLog_Check}" Width="*" CellStyle="{StaticResource LeftAlignedCellStyle}"/>
                <DataGridTextColumn Header="All Good" Binding="{Binding All_Good}" Width="*" CellStyle="{StaticResource LeftAlignedCellStyle}"/>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Status Bar -->
        <Border CornerRadius="10" Background="#FF2D2D30" VerticalAlignment="Bottom" Margin="10">
            <StatusBar Background="Transparent" Foreground="White">
                <StatusBarItem>
                    <TextBlock Name="StatusText" Text="Ready" Margin="10,0,0,0"/>
                </StatusBarItem>
            </StatusBar>
        </Border>
    </Grid>
</Window>